' ''What is the voter share of each party in Vaud''?' We '''read''' the file [[Media:ef2019.csv]].' We '''select''' the results from Vaud. '''select''' is always followed by a condition that each row must meet. Choose any algebraic expression using properties and string and number constants.' We '''project''' to keep the important columns. Add a comma-separated list of columns.read "ef2019.csv"select kanton == "Vaud"project partei, fiktive_waehlendeprint' ''This gave us the absolute figures, how about percentage?''' We ''dup'' to make a copy of the relation.' We '''project''' to create the sum of all voters. When you choose less columns, duplicate rows are eliminated or aggregated. Add the aggregator to the element of the list.' Note that the column ist automatically named with underscore.' We can now '''join''' the two relations on the stack. '''Join cross''' is a complete join of all rows of both relations.dupproject fiktive_waehlende sumprintjoin crossprint' Finally we '''extend''' to calculate the percentage. Extend defines a new column based on an expression of the existing columns.extend share = fiktive_waehlende / fiktive_waehlende_sumprint' We clean up with '''project''' and '''format''' and order by size.project partei, shareformat share "0.0%"order share 9print' Go to [[Election 3]]